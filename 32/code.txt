package com.example.dailysales;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class DailySalesApplication {
    public static void main(String[] args) {
        SpringApplication.run(DailySalesApplication.class, args);
    }
}

package com.example.dailysales.dto;

public record SalesData(String date, double amount) {}

package com.example.dailysales.service;

import com.example.dailysales.dto.SalesData;
import org.springframework.stereotype.Service;

import java.time.LocalDate;
import java.util.List;

@Service
public class SalesService {
    public List<SalesData> getSalesData(String dateStr) {
        LocalDate date = dateStr != null ? LocalDate.parse(dateStr) : LocalDate.now();
        
        // 硬编码测试数据
        return List.of(
            new SalesData(date.minusDays(1).toString(), 9876.54),
            new SalesData(date.toString(), 12345.67)
        );
    }
}

package com.example.dailysales.controller;

import com.example.dailysales.dto.SalesData;
import com.example.dailysales.service.SalesService;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
@RequestMapping("/api")
public class SalesController {
    private final SalesService salesService;

    public SalesController(SalesService salesService) {
        this.salesService = salesService;
    }

    @GetMapping("/daily-sales")
    public List<SalesData> getDailySales(@RequestParam(required = false) String date) {
        return salesService.getSalesData(date);
    }
}

server:
  port: 8080

spring:
  application:
    name: daily-sales-dashboard

<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>销售额日报仪表盘</title>
    <script src="https://cdn.jsdelivr.net/npm/echarts@5.4.3/dist/echarts.min.js"></script>
    <style>
        #chart-container {
            width: 800px;
            height: 500px;
            margin: 30px auto;
        }
        .title {
            text-align: center;
            font-family: Arial, sans-serif;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1 class="title">销售额日报仪表盘</h1>
    <div id="chart-container"></div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const chartDom = document.getElementById('chart-container');
            const myChart = echarts.init(chartDom);
            
            fetch('/api/daily-sales')
                .then(response => response.json())
                .then(data => {
                    const dates = data.map(item => item.date);
                    const amounts = data.map(item => item.amount);
                    
                    const option = {
                        tooltip: {
                            trigger: 'axis',
                            formatter: '{b}<br/>销售额: ¥{c}'
                        },
                        xAxis: {
                            type: 'category',
                            data: dates,
                            name: '日期'
                        },
                        yAxis: {
                            type: 'value',
                            name: '销售额 (元)',
                            axisLabel: {
                                formatter: '¥{value}'
                            }
                        },
                        series: [{
                            data: amounts,
                            type: 'line',
                            smooth: true,
                            itemStyle: {
                                color: '#5470C6'
                            },
                            areaStyle: {
                                color: {
                                    type: 'linear',
                                    x: 0,
                                    y: 0,
                                    x2: 0,
                                    y2: 1,
                                    colorStops: [{
                                        offset: 0,
                                        color: 'rgba(84, 112, 198, 0.5)'
                                    }, {
                                        offset: 1,
                                        color: 'rgba(84, 112, 198, 0.1)'
                                    }]
                                }
                            }
                        }]
                    };
                    
                    myChart.setOption(option);
                })
                .catch(error => console.error('Error fetching data:', error));
            
            window.addEventListener('resize', function() {
                myChart.resize();
            });
        });
    </script>
</body>
</html>